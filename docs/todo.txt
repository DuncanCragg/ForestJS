To Do
-----

 - --------------------
 - this.state.userState = this.userStateUID; !!
 - this.state.doEvaluate = this.doEvaluate.bind(this); !!
 - --------------------
 - more widgets: selector, textarea, radio..
 - separate out gui widgets from 'this'
   - React cpt refers to state and 'subscribes' to it
     - but what about state('watching.counter')? what if that changes?
     - state('giphy.url') instead of state('image')
     - state('image') relies on 'own' state subscribing and setting something for render
   - React cpt is actually the user object, which can observe a top object and anything linked under it
 - --------------------
 - fetch remote objects:
    - can have remote URL in any object, without evaluate of course (Notify/render): send userState over the wire
       - what if list includes remote, can't use Forest.objects[url]
    - refresh? after viewed and time rel to cache ttl
    - check actually fetch()ing a URL!; lastmod/etag?
    - error on fetch
    - timeout? don't use fetch!
 - wrap remote with Forest, like WebObjects did?
    - remote only need Notify and render
 - only look through giphy (url) if button pressed, but then need to look through when it comes in and notify/evaluates.. ?
    - every view-through fetches means only don't notify when it's not changed .. and giphy always changes so get stuck in loop
    - giphy: opaque URLs; non-idempotency
 - --------------------
 - deletions: set to undefined and they're removed
 - --------------------
 - any other way to pass thread than setTimeout(1)? setTimeout(0)!!
   - need to queue up doEvaluates, not use setTimeout?
 - --------------------
 - isomorphism
 - --------------------



